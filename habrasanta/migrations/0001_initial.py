# Generated by Django 4.2.8 on 2023-12-10 22:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import functools
import secrets


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(db_column='username', editable=False, max_length=25, unique=True)),
                ('email', models.CharField(editable=False, max_length=128, null=True)),
                ('email_allowed', models.BooleanField(default=True, editable=False, verbose_name='e-mail уведомления')),
                ('email_token', models.CharField(default=functools.partial(secrets.token_urlsafe, *(24,), **{}), editable=False, max_length=32)),
                ('habr_id', models.CharField(editable=False, max_length=128, null=True, unique=True)),
                ('habr_token', models.CharField(editable=False, max_length=40, null=True)),
                ('is_banned', models.BooleanField(default=False, editable=False, verbose_name='забанен')),
                ('first_login', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='первый вход')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, editable=False, null=True, verbose_name='последний вход')),
                ('last_online', models.DateTimeField(default=django.utils.timezone.now, editable=False, null=True, verbose_name='последний online')),
                ('last_chat_notification', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='последнее уведомление о новых сообщениях')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
                'permissions': [('view_user_email', 'Может просматривать e-mail адрес пользователя')],
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=80, verbose_name='полное имя')),
                ('postcode', models.CharField(max_length=20, verbose_name='индекс')),
                ('address', models.TextField(max_length=200, verbose_name='адрес')),
                ('country', django_countries.fields.CountryField(max_length=2, null=True, verbose_name='страна')),
                ('gift_shipped_at', models.DateTimeField(blank=True, db_column='gift_sent', null=True, verbose_name='подарок отправлен')),
                ('gift_delivered_at', models.DateTimeField(blank=True, db_column='gift_received', null=True, verbose_name='подарок получен')),
                ('giftee', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='santa', to='habrasanta.participation', verbose_name='получатель подарка')),
            ],
            options={
                'permissions': [('view_participation_address', 'Может видеть почтовый адрес участника')],
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_open', models.DateTimeField(verbose_name='открытие регистрации')),
                ('registration_close', models.DateTimeField(verbose_name='закрытие регистрации')),
                ('address_match', models.DateTimeField(editable=False, help_text='Устанавливается скриптом жеребьевки автоматически', null=True, verbose_name='жеребьевка адресов')),
                ('season_close', models.DateTimeField(verbose_name='закрытие сезона')),
                ('member_count', models.PositiveIntegerField(default=0, editable=False)),
                ('shipped_count', models.PositiveIntegerField(default=0, editable=False)),
                ('delivered_count', models.PositiveIntegerField(default=0, editable=False)),
                ('gallery_url', models.URLField(blank=True, verbose_name='пост хвастовства подарками')),
                ('users', models.ManyToManyField(related_name='seasons', through='habrasanta.Participation', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'сезон',
                'verbose_name_plural': 'сезоны',
                'get_latest_by': 'id',
            },
        ),
        migrations.AddField(
            model_name='participation',
            name='season',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='habrasanta.season'),
        ),
        migrations.AddField(
            model_name='participation',
            name='user',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(db_column='body', max_length=400)),
                ('send_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('read_date', models.DateTimeField(blank=True, db_index=True, editable=False, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='habrasanta.participation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='habrasanta.participation')),
            ],
            options={
                'ordering': ['send_date'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.IntegerField(choices=[(1, 'Вход в систему'), (2, 'Выход из системы'), (3, 'Запись на участие'), (4, 'Отказ от участия'), (5, 'Отправка подарка'), (6, 'Получение подарка'), (7, 'Письмо Деду Морозу'), (8, 'Письмо получателю'), (9, 'Блокировка пользователя'), (10, 'Разблокировка пользователя'), (11, 'Заметка обновлена'), (12, 'Отмена отправки'), (13, 'Новый сезон'), (14, 'Отписка от EMail')], verbose_name='событие')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата и время')),
                ('ip_address', models.GenericIPAddressField(null=True, verbose_name='IP-адрес')),
                ('obo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='habrasanta.season', verbose_name='сезон')),
                ('sub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL, verbose_name='действующее лицо')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'событие',
                'verbose_name_plural': 'события',
            },
        ),
        migrations.CreateModel(
            name='BanRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200, verbose_name='причина')),
                ('is_banned', models.BooleanField(default=False, editable=False, verbose_name='забанен')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('admin', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='ban_history', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='participation',
            unique_together={('season', 'user')},
        ),
    ]
